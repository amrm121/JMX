<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="completo_checkout" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.1.1.312. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="urlExtraVitrine" elementType="Argument">
            <stringProp name="Argument.name">urlExtraVitrine</stringProp>
            <stringProp name="Argument.value">www.extra.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlCasasBahiaVitrine" elementType="Argument">
            <stringProp name="Argument.name">urlCasasBahiaVitrine</stringProp>
            <stringProp name="Argument.value">www.casasbahia.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlCarrinhoCasasBahia" elementType="Argument">
            <stringProp name="Argument.name">urlCarrinhoCasasBahia</stringProp>
            <stringProp name="Argument.value">carrinho.casasbahia.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlPontoFrioVitrine" elementType="Argument">
            <stringProp name="Argument.name">urlPontoFrioVitrine</stringProp>
            <stringProp name="Argument.value">www.pontofrio.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="url-fuji" elementType="Argument">
            <stringProp name="Argument.name">url-fuji</stringProp>
            <stringProp name="Argument.value">www.lojafuji.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlVitrineHP" elementType="Argument">
            <stringProp name="Argument.name">urlVitrineHP</stringProp>
            <stringProp name="Argument.value">www.lojahp.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlBarateiroVitrine" elementType="Argument">
            <stringProp name="Argument.name">urlBarateiroVitrine</stringProp>
            <stringProp name="Argument.value">www.barateiro.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlRecomendacaoEx" elementType="Argument">
            <stringProp name="Argument.name">urlRecomendacaoEx</stringProp>
            <stringProp name="Argument.value">rec.extra.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlRecomendacaoCB" elementType="Argument">
            <stringProp name="Argument.name">urlRecomendacaoCB</stringProp>
            <stringProp name="Argument.value">rec.casasbahia.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlRecomendacaoPF" elementType="Argument">
            <stringProp name="Argument.name">urlRecomendacaoPF</stringProp>
            <stringProp name="Argument.value">rec.pontofrio.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlB2BCB" elementType="Argument">
            <stringProp name="Argument.name">urlB2BCB</stringProp>
            <stringProp name="Argument.value">b2b.casasbahia.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlB2BEX" elementType="Argument">
            <stringProp name="Argument.name">urlB2BEX</stringProp>
            <stringProp name="Argument.value">b2b.extra.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlB2BPF" elementType="Argument">
            <stringProp name="Argument.name">urlB2BPF</stringProp>
            <stringProp name="Argument.value">b2b.pontofrio.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlCarrinhoPontoFrio" elementType="Argument">
            <stringProp name="Argument.name">urlCarrinhoPontoFrio</stringProp>
            <stringProp name="Argument.value">carrinho.pontofrio.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlCarrinhoVVAtacado" elementType="Argument">
            <stringProp name="Argument.name">urlCarrinhoVVAtacado</stringProp>
            <stringProp name="Argument.value">carrinho.vvatacado.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlCarrinhoBarateiro" elementType="Argument">
            <stringProp name="Argument.name">urlCarrinhoBarateiro</stringProp>
            <stringProp name="Argument.value">carrinho.barateiro.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlCarrinhoExtra" elementType="Argument">
            <stringProp name="Argument.name">urlCarrinhoExtra</stringProp>
            <stringProp name="Argument.value">carrinho.extra.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlnike" elementType="Argument">
            <stringProp name="Argument.name">urlnike</stringProp>
            <stringProp name="Argument.value">checkout.nike.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlapinike" elementType="Argument">
            <stringProp name="Argument.name">urlapinike</stringProp>
            <stringProp name="Argument.value">api-checkout.nike.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlPrice-Ex" elementType="Argument">
            <stringProp name="Argument.name">urlPrice-Ex</stringProp>
            <stringProp name="Argument.value">preco.api-extra.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlPrice-Cb" elementType="Argument">
            <stringProp name="Argument.name">urlPrice-Cb</stringProp>
            <stringProp name="Argument.value">preco.api-casasbahia.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="urlPrice-Pf" elementType="Argument">
            <stringProp name="Argument.name">urlPrice-Pf</stringProp>
            <stringProp name="Argument.value">preco.api-pontofrio.com.br</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="X-DevTools-Emulate-Network-Conditions-Client-Id" elementType="Header">
            <stringProp name="Header.name">X-DevTools-Emulate-Network-Conditions-Client-Id</stringProp>
            <stringProp name="Header.value">EDFFC8CF63A18B53E15B5A172E0EC88A</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</stringProp>
          </elementProp>
          <elementProp name="Accept-Language" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
          </elementProp>
          <elementProp name="Accept-Encoding" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate, br</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">x-DynaTrace</stringProp>
            <stringProp name="Header.value">SN=stress-test-b2b</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">x-vvtest</stringProp>
            <stringProp name="Header.value">666B02BA-52B8-4E46-AC64-929FEE3C0FA4</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="false">
        <collectionProp name="DNSCacheManager.servers"/>
        <collectionProp name="DNSCacheManager.hosts">
          <elementProp name="carrinho.pontofrio.com.br" elementType="StaticHost">
            <stringProp name="StaticHost.Name">carrinho.pontofrio.com.br</stringProp>
            <stringProp name="StaticHost.Address">177.126.185.15</stringProp>
          </elementProp>
          <elementProp name="www.casasbahia.com.br" elementType="StaticHost">
            <stringProp name="StaticHost.Name">www.casasbahia.com.br</stringProp>
            <stringProp name="StaticHost.Address">177.126.185.29</stringProp>
          </elementProp>
        </collectionProp>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">true</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1363247040000</longProp>
        <longProp name="ThreadGroup.end_time">1363247040000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">3000</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list"/>
          <boolProp name="AuthManager.clearEachIteration">true</boolProp>
        </AuthManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">false</boolProp>
        </CacheManager>
        <hashTree/>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="B2B" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="B2B - CB" enabled="true"/>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pedido_cnpjCB" elementType="Argument">
                  <stringProp name="Argument.name">pedido_cnpjCB</stringProp>
                  <stringProp name="Argument.value">57.822.975/0001-12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pedido_campanhaCB" elementType="Argument">
                  <stringProp name="Argument.name">pedido_campanhaCB</stringProp>
                  <stringProp name="Argument.value">2602</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cep_defaultCB" elementType="Argument">
                  <stringProp name="Argument.name">cep_defaultCB</stringProp>
                  <stringProp name="Argument.value">35420-000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="destinatario_cpfCB" elementType="Argument">
                  <stringProp name="Argument.name">destinatario_cpfCB</stringProp>
                  <stringProp name="Argument.value">203.738.136-00</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="skus-calcular-carrinho-b2b-cb.csv" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">skus-calcular-carrinho-b2b-cb.csv</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">cp_sku</stringProp>
            </CSVDataSet>
            <hashTree/>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="cp_numpedido" enabled="true">
              <stringProp name="maximumValue">369000116265</stringProp>
              <stringProp name="minimumValue">359000116266</stringProp>
              <stringProp name="outputFormat"></stringProp>
              <boolProp name="perThread">false</boolProp>
              <stringProp name="randomSeed"></stringProp>
              <stringProp name="variableName">cp_numpedido</stringProp>
            </RandomVariableConfig>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CalcularCarrinho" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CalcularCarrinho-cb" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:gpa=&quot;http://schemas.datacontract.org/2004/07/Gpa.Comercio.Servicos.Contracts.DTO&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;tem:CalcularCarrinho&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;tem:carrinho&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:CEP&gt;${cep_defaultCB}&lt;/gpa:CEP&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:CNPJ&gt;${pedido_cnpjCB}&lt;/gpa:CNPJ&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:IdCampanha&gt;${pedido_campanhaCB}&lt;/gpa:IdCampanha&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:Produtos&gt;&#xd;
               &lt;!--Zero or more repetitions:--&gt;&#xd;
               &lt;gpa:DadosListaProdutoCarrinhoDTO&gt;&#xd;
                  &lt;gpa:Codigo&gt;${cp_sku}&lt;/gpa:Codigo&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;gpa:Quantidade&gt;1&lt;/gpa:Quantidade&gt;&#xd;
               &lt;/gpa:DadosListaProdutoCarrinhoDTO&gt;&#xd;
            &lt;/gpa:Produtos&gt;&#xd;
         &lt;/tem:carrinho&gt;&#xd;
      &lt;/tem:CalcularCarrinho&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${urlB2BCB}</stringProp>
                <stringProp name="HTTPSampler.port">80</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">ParceirosV3.svc</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">http://tempuri.org/IParceiros/CalcularCarrinho</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value"> text/xml;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">x-DynaTrace</stringProp>
                      <stringProp name="Header.value">SN=b2b-calcularcarrinho-casasbahia</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regex - cp_frete" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cp_frete</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;a:ValorFrete&gt;(.*?)&lt;\/a:ValorFrete&gt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regex - cp_preco" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cp_preco</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;b:ValorTotal&gt;(.*?)&lt;\/b:ValorTotal&gt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ConsultarProdutoPorCampanha" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ConsultarProdutoPorCampanha-cb" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:gpa=&quot;Gpa.B2B&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;tem:ConsultarProdutoPorCampanha&gt;&#xd;
         &lt;tem:produtoCampanha&gt;&#xd;
            &lt;gpa:CNPJ&gt;${pedido_cnpjCB}&lt;/gpa:CNPJ&gt;&#xd;
            &lt;gpa:IdCampanha&gt;${pedido_campanhaCB}&lt;/gpa:IdCampanha&gt;&#xd;
             &lt;gpa:IdSku&gt;${cp_sku}&lt;/gpa:IdSku&gt;&#xd;
         &lt;/tem:produtoCampanha&gt;&#xd;
      &lt;/tem:ConsultarProdutoPorCampanha&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${urlB2BCB}</stringProp>
                <stringProp name="HTTPSampler.port">80</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">ParceirosV3.svc</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">http://tempuri.org/IParceiros/ConsultarProdutoPorCampanha</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value"> text/xml;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">x-DynaTrace</stringProp>
                      <stringProp name="Header.value">SN=b2b-consultarprodutoporcampanha-casasbahia</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CriarPedido" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CriarPedido-cb" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:gpa=&quot;Gpa.B2B&quot; xmlns:dad=&quot;DadosPedidoB2B&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;tem:CriarPedido&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;tem:pedido&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
           &#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:AguardarConfirmacao&gt;true&lt;/gpa:AguardarConfirmacao&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
        &#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:CNPJ&gt;${pedido_cnpjCB}&lt;/gpa:CNPJ&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:Campanha&gt;${pedido_campanhaCB}&lt;/gpa:Campanha&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:Destinatario&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:CpfCnpj&gt;${destinatario_cpfCB}&lt;/dad:CpfCnpj&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Email&gt;financeiro@4s.com.br&lt;/dad:Email&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:InscricaoEstadual&gt;&lt;/dad:InscricaoEstadual&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Nome&gt;Massa Teste Black Friday&lt;/dad:Nome&gt;&#xd;
            &lt;/gpa:Destinatario&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:EnderecoEntrega&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Bairro&gt;Veloso&lt;/dad:Bairro&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:CEP&gt;${cep_defaultCB}&lt;/dad:CEP&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Cidade&gt;Mariana&lt;/dad:Cidade&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Complemento&gt;-&lt;/dad:Complemento&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Estado&gt;MG&lt;/dad:Estado&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Logradouro&gt;Travessa E Preciso Saber Viver&lt;/dad:Logradouro&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Numero&gt;25&lt;/dad:Numero&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Referencia&gt;Proximo ao Mercado SA&lt;/dad:Referencia&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Telefone&gt;36065283&lt;/dad:Telefone&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Telefone2&gt;&lt;/dad:Telefone2&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Telefone3&gt;&lt;/dad:Telefone3&gt;&#xd;
            &lt;/gpa:EnderecoEntrega&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &#xd;
            &lt;!--Optional:--&gt;&#xd;
            &#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:PedidoParceiro&gt;${cp_numpedido}&lt;/gpa:PedidoParceiro&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:Produtos&gt;&#xd;
               &lt;!--Zero or more repetitions:--&gt;&#xd;
               &lt;dad:ProdutoDadosPedidoB2B&gt;&#xd;
             &lt;!--Optional:--&gt;&#xd;
                  &lt;dad:Codigo&gt;${cp_sku}&lt;/dad:Codigo&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;dad:PrecoVenda&gt;${cp_preco}&lt;/dad:PrecoVenda&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;dad:Quantidade&gt;1&lt;/dad:Quantidade&gt;&#xd;
               &lt;/dad:ProdutoDadosPedidoB2B&gt;&#xd;
            &lt;/gpa:Produtos&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:ValorFrete&gt;${cp_frete}&lt;/gpa:ValorFrete&gt;&#xd;
         &lt;/tem:pedido&gt;&#xd;
      &lt;/tem:CriarPedido&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${urlB2BCB}</stringProp>
                <stringProp name="HTTPSampler.port">80</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">ParceirosV3.svc</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">http://tempuri.org/IParceiros/CriarPedido</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value"> text/xml;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">x-DynaTrace</stringProp>
                      <stringProp name="Header.value">SN=b2b-criarpedido-casasbahia</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="regex-pedido_criado" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">pedido_criado</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;a:CodigoPedido&gt;(.*?)&lt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ConfirmarPedido" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ConfirmarPedido-cb" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:con=&quot;ConfirmarPedido&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;tem:ConfirmarPedido&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;tem:pedido&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;con:Confirmado&gt;false&lt;/con:Confirmado&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;con:IdCampanha&gt;${pedido_campanhaCB}&lt;/con:IdCampanha&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;con:IdCompra&gt;${pedido_criado}&lt;/con:IdCompra&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;con:IdPedidoParceiro&gt;${cp_numpedido}&lt;/con:IdPedidoParceiro&gt;&#xd;
         &lt;/tem:pedido&gt;&#xd;
      &lt;/tem:ConfirmarPedido&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${urlB2BCB}</stringProp>
                <stringProp name="HTTPSampler.port">80</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">ParceirosV3.svc</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">http://tempuri.org/IParceiros/ConfirmarPedido</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value"> text/xml;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">x-DynaTrace</stringProp>
                      <stringProp name="Header.value">SN=b2b-confirmarpedido-casasbahia</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="B2B-EX" enabled="true"/>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pedido_cnpjEX" elementType="Argument">
                  <stringProp name="Argument.name">pedido_cnpjEX</stringProp>
                  <stringProp name="Argument.value">57.822.975/0001-12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pedido_campanhaEX" elementType="Argument">
                  <stringProp name="Argument.name">pedido_campanhaEX</stringProp>
                  <stringProp name="Argument.value">5416</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cep_defaultEX" elementType="Argument">
                  <stringProp name="Argument.name">cep_defaultEX</stringProp>
                  <stringProp name="Argument.value">35420-000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="destinatario_cpfEX" elementType="Argument">
                  <stringProp name="Argument.name">destinatario_cpfEX</stringProp>
                  <stringProp name="Argument.value">203.738.136-00</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="skus-calcular-carrinho-b2b-ex.csv" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">skus-calcular-carrinho-b2b-ex.csv</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">cp_sku_ex</stringProp>
            </CSVDataSet>
            <hashTree/>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="cp_numpedido_ex" enabled="true">
              <stringProp name="maximumValue">359000116265</stringProp>
              <stringProp name="minimumValue">349000116266</stringProp>
              <stringProp name="outputFormat"></stringProp>
              <boolProp name="perThread">false</boolProp>
              <stringProp name="randomSeed"></stringProp>
              <stringProp name="variableName">cp_numpedido_ex</stringProp>
            </RandomVariableConfig>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CalcularCarrinho" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CalcularCarrinho-ex" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:gpa=&quot;http://schemas.datacontract.org/2004/07/Gpa.Comercio.Servicos.Contracts.DTO&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;tem:CalcularCarrinho&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;tem:carrinho&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:CEP&gt;${cep_defaultEX}&lt;/gpa:CEP&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:CNPJ&gt;${pedido_cnpjEX}&lt;/gpa:CNPJ&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:IdCampanha&gt;${pedido_campanhaEX}&lt;/gpa:IdCampanha&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:Produtos&gt;&#xd;
               &lt;!--Zero or more repetitions:--&gt;&#xd;
               &lt;gpa:DadosListaProdutoCarrinhoDTO&gt;&#xd;
                  &lt;gpa:Codigo&gt;${cp_sku_ex}&lt;/gpa:Codigo&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;gpa:Quantidade&gt;1&lt;/gpa:Quantidade&gt;&#xd;
               &lt;/gpa:DadosListaProdutoCarrinhoDTO&gt;&#xd;
            &lt;/gpa:Produtos&gt;&#xd;
         &lt;/tem:carrinho&gt;&#xd;
      &lt;/tem:CalcularCarrinho&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${urlB2BEX}</stringProp>
                <stringProp name="HTTPSampler.port">80</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">ParceirosV3.svc</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">http://tempuri.org/IParceiros/CalcularCarrinho</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value"> text/xml;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">x-DynaTrace</stringProp>
                      <stringProp name="Header.value">SN=b2b-calcularcarrinho-extra</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regex - cp_frete" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cp_frete_ex</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;a:ValorFrete&gt;(.*?)&lt;\/a:ValorFrete&gt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regex - cp_preco" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cp_preco_ex</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;b:ValorTotal&gt;(.*?)&lt;\/b:ValorTotal&gt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ConsultarProdutoPorCampanha" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ConsultarProdutoPorCampanha-ex" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:gpa=&quot;Gpa.B2B&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;tem:ConsultarProdutoPorCampanha&gt;&#xd;
         &lt;tem:produtoCampanha&gt;&#xd;
            &lt;gpa:CNPJ&gt;${pedido_cnpjEX}&lt;/gpa:CNPJ&gt;&#xd;
            &lt;gpa:IdCampanha&gt;${pedido_campanhaEX}&lt;/gpa:IdCampanha&gt;&#xd;
             &lt;gpa:IdSku&gt;${cp_sku_ex}&lt;/gpa:IdSku&gt;&#xd;
         &lt;/tem:produtoCampanha&gt;&#xd;
      &lt;/tem:ConsultarProdutoPorCampanha&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${urlB2BEX}</stringProp>
                <stringProp name="HTTPSampler.port">80</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">ParceirosV3.svc</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">http://tempuri.org/IParceiros/ConsultarProdutoPorCampanha</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value"> text/xml;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">x-DynaTrace</stringProp>
                      <stringProp name="Header.value">SN=b2b-consultarprodutoporcampanha-extra</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CriarPedido" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CriarPedido-ex" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:gpa=&quot;Gpa.B2B&quot; xmlns:dad=&quot;DadosPedidoB2B&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;tem:CriarPedido&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;tem:pedido&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
           &#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:AguardarConfirmacao&gt;true&lt;/gpa:AguardarConfirmacao&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
        &#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:CNPJ&gt;${pedido_cnpjEX}&lt;/gpa:CNPJ&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:Campanha&gt;${pedido_campanhaEX}&lt;/gpa:Campanha&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:Destinatario&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:CpfCnpj&gt;${destinatario_cpfEX}&lt;/dad:CpfCnpj&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Email&gt;financeiro@4s.com.br&lt;/dad:Email&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:InscricaoEstadual&gt;&lt;/dad:InscricaoEstadual&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Nome&gt;Massa Teste Black Friday&lt;/dad:Nome&gt;&#xd;
            &lt;/gpa:Destinatario&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:EnderecoEntrega&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Bairro&gt;Veloso&lt;/dad:Bairro&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:CEP&gt;${cep_defaultEX}&lt;/dad:CEP&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Cidade&gt;Mariana&lt;/dad:Cidade&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Complemento&gt;-&lt;/dad:Complemento&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Estado&gt;MG&lt;/dad:Estado&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Logradouro&gt;Travessa E Preciso Saber Viver&lt;/dad:Logradouro&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Numero&gt;25&lt;/dad:Numero&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Referencia&gt;Proximo ao Mercado SA&lt;/dad:Referencia&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Telefone&gt;36065283&lt;/dad:Telefone&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Telefone2&gt;&lt;/dad:Telefone2&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Telefone3&gt;&lt;/dad:Telefone3&gt;&#xd;
            &lt;/gpa:EnderecoEntrega&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &#xd;
            &lt;!--Optional:--&gt;&#xd;
            &#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:PedidoParceiro&gt;${cp_numpedido_ex}&lt;/gpa:PedidoParceiro&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:Produtos&gt;&#xd;
               &lt;!--Zero or more repetitions:--&gt;&#xd;
               &lt;dad:ProdutoDadosPedidoB2B&gt;&#xd;
             &lt;!--Optional:--&gt;&#xd;
                  &lt;dad:Codigo&gt;${cp_sku_ex}&lt;/dad:Codigo&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;dad:PrecoVenda&gt;${cp_preco_ex}&lt;/dad:PrecoVenda&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;dad:Quantidade&gt;1&lt;/dad:Quantidade&gt;&#xd;
               &lt;/dad:ProdutoDadosPedidoB2B&gt;&#xd;
            &lt;/gpa:Produtos&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:ValorFrete&gt;${cp_frete_ex}&lt;/gpa:ValorFrete&gt;&#xd;
         &lt;/tem:pedido&gt;&#xd;
      &lt;/tem:CriarPedido&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${urlB2BEX}</stringProp>
                <stringProp name="HTTPSampler.port">80</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">ParceirosV3.svc</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">http://tempuri.org/IParceiros/CriarPedido</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value"> text/xml;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">x-DynaTrace</stringProp>
                      <stringProp name="Header.value">SN=b2b-criarpedido-extra</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="regex-pedido_criado" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">pedido_criado_ex</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;a:CodigoPedido&gt;(.*?)&lt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ConfirmarPedido" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ConfirmarPedido-ex" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:con=&quot;ConfirmarPedido&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;tem:ConfirmarPedido&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;tem:pedido&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;con:Confirmado&gt;false&lt;/con:Confirmado&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;con:IdCampanha&gt;${pedido_campanhaEX}&lt;/con:IdCampanha&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;con:IdCompra&gt;${pedido_criado_ex}&lt;/con:IdCompra&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;con:IdPedidoParceiro&gt;${cp_numpedido_ex}&lt;/con:IdPedidoParceiro&gt;&#xd;
         &lt;/tem:pedido&gt;&#xd;
      &lt;/tem:ConfirmarPedido&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${urlB2BEX}</stringProp>
                <stringProp name="HTTPSampler.port">80</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">ParceirosV3.svc</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">http://tempuri.org/IParceiros/ConfirmarPedido</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value"> text/xml;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">x-DynaTrace</stringProp>
                      <stringProp name="Header.value">SN=b2b-confirmarpedido-extra</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="B2B-PF" enabled="true"/>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Variáveis Definidas Pelo Usuário" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pedido_cnpjPF" elementType="Argument">
                  <stringProp name="Argument.name">pedido_cnpjPF</stringProp>
                  <stringProp name="Argument.value">57.822.975/0001-12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pedido_campanhaPF" elementType="Argument">
                  <stringProp name="Argument.name">pedido_campanhaPF</stringProp>
                  <stringProp name="Argument.value">5399</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cep_defaultPF" elementType="Argument">
                  <stringProp name="Argument.name">cep_defaultPF</stringProp>
                  <stringProp name="Argument.value">35420-000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="destinatario_cpfPF" elementType="Argument">
                  <stringProp name="Argument.name">destinatario_cpfPF</stringProp>
                  <stringProp name="Argument.value">203.738.136-00</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="skus-calcular-carrinho-b2b-pf.csv" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">skus-calcular-carrinho-b2b-pf.csv</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">cp_sku_pf</stringProp>
            </CSVDataSet>
            <hashTree/>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="cp_numpedido_pf" enabled="true">
              <stringProp name="maximumValue">389000116265</stringProp>
              <stringProp name="minimumValue">379000116266</stringProp>
              <stringProp name="outputFormat"></stringProp>
              <boolProp name="perThread">false</boolProp>
              <stringProp name="randomSeed"></stringProp>
              <stringProp name="variableName">cp_numpedido_pf</stringProp>
            </RandomVariableConfig>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CalcularCarrinho" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CalcularCarrinho-pf" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:gpa=&quot;http://schemas.datacontract.org/2004/07/Gpa.Comercio.Servicos.Contracts.DTO&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;tem:CalcularCarrinho&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;tem:carrinho&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:CEP&gt;${cep_defaultPF}&lt;/gpa:CEP&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:CNPJ&gt;${pedido_cnpjPF}&lt;/gpa:CNPJ&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:IdCampanha&gt;${pedido_campanhaPF}&lt;/gpa:IdCampanha&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:Produtos&gt;&#xd;
               &lt;!--Zero or more repetitions:--&gt;&#xd;
               &lt;gpa:DadosListaProdutoCarrinhoDTO&gt;&#xd;
                  &lt;gpa:Codigo&gt;${cp_sku_pf}&lt;/gpa:Codigo&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;gpa:Quantidade&gt;1&lt;/gpa:Quantidade&gt;&#xd;
               &lt;/gpa:DadosListaProdutoCarrinhoDTO&gt;&#xd;
            &lt;/gpa:Produtos&gt;&#xd;
         &lt;/tem:carrinho&gt;&#xd;
      &lt;/tem:CalcularCarrinho&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${urlB2BPF}</stringProp>
                <stringProp name="HTTPSampler.port">80</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">ParceirosV3.svc</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">http://tempuri.org/IParceiros/CalcularCarrinho</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value"> text/xml;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">x-DynaTrace</stringProp>
                      <stringProp name="Header.value">SN=b2b-calcularcarrinho-pontofrio</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regex - cp_frete" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cp_frete_pf</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;a:ValorFrete&gt;(.*?)&lt;\/a:ValorFrete&gt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regex - cp_preco" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cp_preco_pf</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;b:ValorTotal&gt;(.*?)&lt;\/b:ValorTotal&gt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ConsultarProdutoPorCampanha" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ConsultarProdutoPorCampanha-pf" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:gpa=&quot;Gpa.B2B&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;tem:ConsultarProdutoPorCampanha&gt;&#xd;
         &lt;tem:produtoCampanha&gt;&#xd;
            &lt;gpa:CNPJ&gt;${pedido_cnpjPF}&lt;/gpa:CNPJ&gt;&#xd;
            &lt;gpa:IdCampanha&gt;${pedido_campanhaPF}&lt;/gpa:IdCampanha&gt;&#xd;
             &lt;gpa:IdSku&gt;${cp_sku_pf}&lt;/gpa:IdSku&gt;&#xd;
         &lt;/tem:produtoCampanha&gt;&#xd;
      &lt;/tem:ConsultarProdutoPorCampanha&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${urlB2BPF}</stringProp>
                <stringProp name="HTTPSampler.port">80</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">ParceirosV3.svc</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">http://tempuri.org/IParceiros/ConsultarProdutoPorCampanha</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value"> text/xml;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">x-DynaTrace</stringProp>
                      <stringProp name="Header.value">SN=b2b-consultarprodutoporcampanha-pontofrio</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CriarPedido" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CriarPedido-pf-OLD" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:gpa=&quot;Gpa.B2B&quot; xmlns:dad=&quot;DadosPedidoB2B&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;tem:CriarPedido&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;tem:pedido&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:AguardarConfirmacao&gt;true&lt;/gpa:AguardarConfirmacao&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:Apolice&gt;${cp_numpedido_pf}&lt;/gpa:Apolice&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:CNPJ&gt;${pedido_cnpjPF}&lt;/gpa:CNPJ&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:Campanha&gt;${pedido_campanhaPF}&lt;/gpa:Campanha&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:Destinatario&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:CpfCnpj&gt;${destinatario_cpfPF}&lt;/dad:CpfCnpj&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Email&gt;financeiro@4s.com.br&lt;/dad:Email&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:InscricaoEstadual/&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Nome&gt;Massa Teste Black Friday&lt;/dad:Nome&gt;&#xd;
            &lt;/gpa:Destinatario&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:EnderecoEntrega&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Bairro&gt;Veloso&lt;/dad:Bairro&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:CEP&gt;${cep_defaultPF}&lt;/dad:CEP&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Cidade&gt;Mariana&lt;/dad:Cidade&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Complemento&gt;-&lt;/dad:Complemento&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Estado&gt;MG&lt;/dad:Estado&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Logradouro&gt;Travessa E Preciso Saber Viver&lt;/dad:Logradouro&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Numero&gt;25&lt;/dad:Numero&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Referencia&gt;Proximo ao Mercado SA&lt;/dad:Referencia&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Telefone&gt;36065283&lt;/dad:Telefone&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Telefone2/&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Telefone3/&gt;&#xd;
            &lt;/gpa:EnderecoEntrega&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:PedidoParceiro&gt;${cp_numpedido_pf}&lt;/gpa:PedidoParceiro&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:Produtos&gt;&#xd;
               &lt;!--Zero or more repetitions:--&gt;&#xd;
               &lt;dad:ProdutoDadosPedidoB2B&gt;&#xd;
				  &lt;!--Optional:--&gt;&#xd;
                  &lt;dad:Codigo&gt;${cp_sku_pf}&lt;/dad:Codigo&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;dad:PrecoVenda&gt;${cp_preco_pf}&lt;/dad:PrecoVenda&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;dad:Quantidade&gt;1&lt;/dad:Quantidade&gt;&#xd;
               &lt;/dad:ProdutoDadosPedidoB2B&gt;&#xd;
            &lt;/gpa:Produtos&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:SenhaAtendimento&gt;${cp_numpedido_pf}&lt;/gpa:SenhaAtendimento&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:ValorFrete&gt;${cp_frete_pf}&lt;/gpa:ValorFrete&gt;&#xd;
         &lt;/tem:pedido&gt;&#xd;
      &lt;/tem:CriarPedido&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${urlB2BPF}</stringProp>
                <stringProp name="HTTPSampler.port">80</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">ParceirosV3.svc</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">http://tempuri.org/IParceiros/CriarPedido</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value"> text/xml;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">x-DynaTrace</stringProp>
                      <stringProp name="Header.value">SN=b2b-criarpedido-pontofrio</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="regex-pedido_criado" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">pedido_criado_pf</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;a:CodigoPedido&gt;(.*?)&lt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CriarPedido-pf" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:gpa=&quot;Gpa.B2B&quot; xmlns:dad=&quot;DadosPedidoB2B&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;tem:CriarPedido&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;tem:pedido&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:AguardarConfirmacao&gt;true&lt;/gpa:AguardarConfirmacao&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:CNPJ&gt;${pedido_cnpjPF}&lt;/gpa:CNPJ&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:Campanha&gt;${pedido_campanhaPF}&lt;/gpa:Campanha&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:Destinatario&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:CpfCnpj&gt;${destinatario_cpfPF}&lt;/dad:CpfCnpj&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Email&gt;financeiro@4s.com.br&lt;/dad:Email&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:InscricaoEstadual/&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Nome&gt;Massa Teste Black Friday&lt;/dad:Nome&gt;&#xd;
            &lt;/gpa:Destinatario&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:EnderecoEntrega&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Bairro&gt;Veloso&lt;/dad:Bairro&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:CEP&gt;${cep_defaultPF}&lt;/dad:CEP&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Cidade&gt;Mariana&lt;/dad:Cidade&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Complemento&gt;-&lt;/dad:Complemento&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Estado&gt;MG&lt;/dad:Estado&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Logradouro&gt;Travessa E Preciso Saber Viver&lt;/dad:Logradouro&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Numero&gt;25&lt;/dad:Numero&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Referencia&gt;Proximo ao Mercado SA&lt;/dad:Referencia&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Telefone&gt;36065283&lt;/dad:Telefone&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Telefone2/&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;dad:Telefone3/&gt;&#xd;
            &lt;/gpa:EnderecoEntrega&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:PedidoParceiro&gt;${cp_numpedido_pf}&lt;/gpa:PedidoParceiro&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:Produtos&gt;&#xd;
               &lt;!--Zero or more repetitions:--&gt;&#xd;
               &lt;dad:ProdutoDadosPedidoB2B&gt;&#xd;
				  &lt;!--Optional:--&gt;&#xd;
                  &lt;dad:Codigo&gt;${cp_sku_pf}&lt;/dad:Codigo&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;dad:PrecoVenda&gt;${cp_preco_pf}&lt;/dad:PrecoVenda&gt;&#xd;
                  &lt;!--Optional:--&gt;&#xd;
                  &lt;dad:Quantidade&gt;1&lt;/dad:Quantidade&gt;&#xd;
               &lt;/dad:ProdutoDadosPedidoB2B&gt;&#xd;
            &lt;/gpa:Produtos&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;gpa:ValorFrete&gt;${cp_frete_pf}&lt;/gpa:ValorFrete&gt;&#xd;
         &lt;/tem:pedido&gt;&#xd;
      &lt;/tem:CriarPedido&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${urlB2BPF}</stringProp>
                <stringProp name="HTTPSampler.port">80</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">ParceirosV3.svc</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">http://tempuri.org/IParceiros/CriarPedido</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value"> text/xml;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">x-DynaTrace</stringProp>
                      <stringProp name="Header.value">SN=b2b-criarpedido-pontofrio</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="regex-pedido_criado" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">pedido_criado_pf</stringProp>
                  <stringProp name="RegexExtractor.regex">&lt;a:CodigoPedido&gt;(.*?)&lt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ConfirmarPedido" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ConfirmarPedido-pf" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:con=&quot;ConfirmarPedido&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;tem:ConfirmarPedido&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;tem:pedido&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;con:Confirmado&gt;false&lt;/con:Confirmado&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;con:IdCampanha&gt;${pedido_campanhaPF}&lt;/con:IdCampanha&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;con:IdCompra&gt;${pedido_criado_pf}&lt;/con:IdCompra&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;con:IdPedidoParceiro&gt;${cp_numpedido_pf}&lt;/con:IdPedidoParceiro&gt;&#xd;
         &lt;/tem:pedido&gt;&#xd;
      &lt;/tem:ConfirmarPedido&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${urlB2BPF}</stringProp>
                <stringProp name="HTTPSampler.port">80</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">ParceirosV3.svc</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">http://tempuri.org/IParceiros/ConfirmarPedido</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value"> text/xml;charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">x-DynaTrace</stringProp>
                      <stringProp name="Header.value">SN=b2b-confirmarpedido-pontofrio</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="Ver Resultados em Tabela" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Ver Árvore de Resultados" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Relatório Agregado" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
